{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReversed","NONE","sortType","setSortType","renderedGoods","setRenderedGoods","isRessetable","useEffect","goods","isGoodReversed","goodSortType","visibleGoods","sort","firstGood","SecondGood","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","setSorting","sortingType","className","type","classNames","onClick","prevValue","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0CL,mBAAmB,IAA7D,mBAAOM,EAAP,KAAsBC,EAAtB,KACMC,EAAeP,GAAcG,IAAaP,EAASM,KA4BzDM,qBAAU,WACRF,EA3BwB,SACxBG,EACAC,EACAC,GAEA,IAAMC,EAAY,YAAOH,GAkBzB,OAhBAG,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQJ,GACN,KAAKf,EAASoB,SACZ,OAAOF,EAAUG,cAAcF,GACjC,KAAKnB,EAASsB,OACZ,OAAOJ,EAAUK,OAASJ,EAAWI,OAEvC,QACE,OAAO,MAITT,GACFE,EAAaQ,UAGRR,EAIUS,CAAkBxB,EAAiBG,EAAYG,MAC/D,CAACH,EAAYG,IAEhB,IAIMmB,EAAa,SAACC,GAClBnB,EAAYmB,IAQd,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,SACA,CAAE,WAAYvB,IAAaP,EAASoB,WAEtCW,QAAS,kBAAML,EAAW1B,EAASoB,WAPrC,iCAYA,wBACES,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYvB,IAAaP,EAASsB,SAEtCS,QAAS,kBAAML,EAAW1B,EAASsB,SAPrC,4BAYA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAa1B,IAEjB2B,QA/CQ,WACd1B,GAAY,SAAA2B,GAAS,OAAKA,MAuCtB,qBAYCrB,GACC,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QAhDI,WACZ1B,GAAY,GACZqB,EAAW1B,EAASM,OA2Cd,sBAUJ,6BACE,6BACGG,EAAcwB,KAAI,SAAAC,GAAI,OACrB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,cC3HrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.07f1859d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [renderedGoods, setRenderedGoods] = useState<string[]>([]);\n  const isRessetable = isReversed || sortType !== SortType.NONE;\n\n  const getReorderedGoods = (\n    goods: string[],\n    isGoodReversed: boolean,\n    goodSortType: SortType,\n  ) => {\n    const visibleGoods = [...goods];\n\n    visibleGoods.sort((firstGood, SecondGood) => {\n      switch (goodSortType) {\n        case SortType.ALPHABET:\n          return firstGood.localeCompare(SecondGood);\n        case SortType.LENGTH:\n          return firstGood.length - SecondGood.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isGoodReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  useEffect(() => {\n    setRenderedGoods(getReorderedGoods(goodsFromServer, isReversed, sortType));\n  }, [isReversed, sortType]);\n\n  const reverse = () => {\n    setReversed(prevValue => !prevValue);\n  };\n\n  const setSorting = (sortingType: SortType) => {\n    setSortType(sortingType);\n  };\n\n  const reset = () => {\n    setReversed(false);\n    setSorting(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'isInfo',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => setSorting(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => setSorting(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {isRessetable && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {renderedGoods.map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}